#!/usr/bin/python
# -*- coding: utf-8 -*-

def join(array):
	#Lagde en egen join-metode
	#for å unngå å få mellomrom
	#etter newline (som ' '.join(list) gir)
	returnstring = ''

	for element in array:
		if '\n' in element:
			returnstring += element
		else:
			returnstring += element + ' '

	return returnstring

def text_wrap(string, width):

	if (len(string) <= width):
		return string

	words = string.strip().split(' ')

	final_list = []

	# Velger å gå gjennom listen og fjerne ord
	# etter som jeg er ferdig med dem
	# og putter dem i final_list

	while words:
		# Holder styr på lengden på linjen for å
		# finne ut hvor man skal breake
		length = 0

		# Håndterer ord som er lenger enn bredden
		# ved å legge til delen av ordet som
		# er kort nok for bredden til listen
		# og så legge resten av ordet tilbake som et eget ord i listen
		if len(words[0]) > width:
			final_list.append(words[0][0:width-1] + '-\n')
			words[0] = words[0][width-1:]
			continue

		for i in range(len(words)):
			length += len(words[i])
			if (i > 0):
				#For å også få med mellomrom i lengden
				length += 1
			if (length <= width):
				final_list.append(words[i])

				# Man er ferdig hvis man er på slutten av listen
				if (i == len(words)-1):
					return join(final_list)
			else:
				# Hvis lengden av alle ordene opp til i
				# er lenger enn bredden, legger man til newline
				# og fjerner elementene i listen opp til i
				final_list.append('\n')
				del words[0:i]
				break

print("\n1:\n\n" + text_wrap("hallo, ja hei", 6))

print("\n2:\n\n" + text_wrap("veldiglangtord", 6))

print("\n3:\n\n" + text_wrap("Lorem ipsum dolor sit amet, consectetur adipiscing elit\
, sed do eiusmod tempor incididunt ut labore et dolore magna\
aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco\
laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor\
in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla\
pariatur. Excepteur sint occaecat cupidatat non proident, sunt in\
culpa qui officia deserunt mollit anim id est laborum", 13))
